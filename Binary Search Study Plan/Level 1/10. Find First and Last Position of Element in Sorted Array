// REPEAT

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        
        vector<int> ans;
       
        ans.push_back(firstOccurence(nums,target));
        ans.push_back(lastOccurence(nums,target));
        return ans;
    }

    int firstOccurence(vector<int>& arr, int k){
        int start=0;
        int end=arr.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(k==arr[mid]){
                ans=mid;
                end=mid-1;
            }
            else if(k<arr[mid]){
                end=mid-1;
            }
            else{
                start=mid+1;

            }
        }
        return ans;
    }    

    

    int lastOccurence(vector<int>& arr, int k){
        int start=0;
        int end=arr.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(k==arr[mid]){
                ans=mid;
                start=mid+1;
            }
            else if(k<arr[mid]){
                end=mid-1;
            }
            else{
                start=mid+1;

            }
        }
        return ans;
    } 
};
